@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@* @{
    ViewData["Title"] = "Capture Photo";
    Layout = "";
}

<!Doctype html>
<html>

    <head>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    </head>
    <body>
    <h2>@ViewData["Title"]</h2>
    <div>
        <video id="video" width="640" height="480" autoplay></video>
        <button id="captureBtn" class="btn btn-primary">
            <span class="glyphicon glyphicon-camera" aria-hidden="true"></span> Capture Photo
        </button>
    </div>

    <canvas id="canvas" style="display:none;"></canvas>

    <script>
        const video = document.getElementById('video');
        const canvas = document.getElementById('canvas');
        const captureBtn = document.getElementById('captureBtn');

        navigator.mediaDevices.getUserMedia({ video: true })
            .then((stream) => {
                video.srcObject = stream;
            })
            .catch((err) => {
                console.error('Error accessing webcam:', err);
            });

        captureBtn.addEventListener('click', () => {
            const context = canvas.getContext('2d');
            context.drawImage(video, 0, 0, canvas.width, canvas.height);

            const imageData = canvas.toDataURL('image/png');

            fetch('@Url.Action("SavePhoto", "Photo")', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({ imageData }),
            })
                .then((response) => response.json())
                .then((data) => {
                    alert(data.message);
                })
                .catch((error) => {
                    console.error('Error saving photo:', error);
                });
        });
    </script>

    </body>


</html>
 *@

@{
    ViewData["Title"] = "Capture Photo";
    Layout = "";
}

<h2>@ViewData["Title"]</h2>

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <video id="video" width="100%" height="100%" autoplay></video>
            <button id="captureBtn" class="btn btn-primary mt-3">
                <span class="glyphicon glyphicon-camera" aria-hidden="true">Capture Photo</span>
            </button>
        </div>
    </div>
</div>

<canvas id="canvas" style="display:none;"></canvas>

<script>
    const video = document.getElementById('video');
    const canvas = document.getElementById('canvas');
    const captureBtn = document.getElementById('captureBtn');

    navigator.mediaDevices.getUserMedia({ video: true })
        .then((stream) => {
            video.srcObject = stream;
        })
        .catch((err) => {
            console.error('Error accessing webcam:', err);
        });

    captureBtn.addEventListener('click', () => {
        const context = canvas.getContext('2d');
        context.drawImage(video, 0, 0, canvas.width, canvas.height);

        const imageData = canvas.toDataURL('image/png');

        fetch('@Url.Action("SavePhoto", "Photo")', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
            },
            body: JSON.stringify({ imageData }),
        })
            .then((response) => response.json())
            .then((data) => {
                alert(data.message);
            })
            .catch((error) => {
                console.error('Error saving photo:', error);
            });
    });
</script>

